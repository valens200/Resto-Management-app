
import React from 'react'
import '../index.css'
import '../App.css'
import {useState, useEffect } from 'react'
import {useSelector , useDispatch} from 'react-redux'
import {Link } from 'react-router-dom'
import { getType , setForm, openedCheckBox} from '../features/form'
import yummy from '../assets/images/yummy.png'
 

function SignUpForm() {
  const dispatch = useDispatch();

  var signupInputs1 = useSelector((store) => store.form.inputs.loginInputs);
  const opened = useSelector((store) => store.form.openedCheckBox);
  useEffect(() =>{
    console.log(signupInputs1)
  }, [signupInputs1])
  const getType = (input) =>  {
    if(input == "Email"){
      return 'email';
    }else if(input == "password"){
      return 'password';
    }else{
      return 'text'
    }
  }
    
  const getClass = () => {
    if(opened){
        console.log(opened)
        return "bg-[red] translate-y-2 rounded w-[5%] h-[2vh]";
       

    }else{
        return "bg-[white] border-[red] border-[1px] translate-y-2 rounded w-[5%] h-[2vh]"
    }
  }
return (
  <div className="h-[100vh]">
      <div className="flex flex-row h-[94%] translate-y-5 border w-[80%] mx-auto">
        <div className="bg-[red] hidden md:block w-[40%] h-[100%]">
       <Link to="/"><img className="w-[70%] mx-auto" src={yummy} /></Link>

        <svg className="w-[99%] mx-auto h-[90%]" viewBox="0 0 730 615" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_465_66)">
<path d="M504.253 613.654H168.621V170.854C168.621 76.6444 228.227 0 301.494 0H371.379C444.646 0 504.253 76.6444 504.253 170.854V613.654Z" fill="#FFB0B0" fill-opacity="0.47"/>
<path d="M434.368 613.657H168.621V170.857C168.547 134.758 177.437 99.5715 193.996 70.4205C194.606 69.3507 195.215 68.2947 195.843 67.2503C203.852 53.7429 213.384 41.8472 224.123 31.9557C224.729 31.3881 225.338 30.8305 225.956 30.2728C234.942 22.2768 244.663 15.7403 254.896 10.812C255.504 10.5158 256.123 10.2191 256.742 9.93445C265.997 5.68744 275.591 2.77826 285.347 1.26063C285.952 1.15439 286.573 1.07126 287.194 0.988124C296.701 -0.318958 306.289 -0.318958 315.796 0.988124C316.416 1.07126 317.037 1.15438 317.648 1.26176C327.402 2.7795 336.994 5.68832 346.247 9.93451C346.865 10.2191 347.484 10.5159 348.094 10.8126C358.201 15.6788 367.807 22.1177 376.697 29.9858C377.315 30.5314 377.933 31.0891 378.542 31.6468C384.562 37.1718 390.216 43.3269 395.447 50.0493C399.641 55.4415 403.55 61.1892 407.147 67.2539C407.773 68.2948 408.382 69.3507 408.991 70.4188C425.551 99.5701 434.441 134.757 434.368 170.857V613.657Z" fill="white"/>
<path d="M412.759 415.61C420.884 415.61 427.471 407.14 427.471 396.691C427.471 386.243 420.884 377.773 412.759 377.773C404.633 377.773 398.046 386.243 398.046 396.691C398.046 407.14 404.633 415.61 412.759 415.61Z" fill="#FF0000"/>
<path d="M476.758 600.389H465.484L460.121 544.477L476.76 544.478L476.758 600.389Z" fill="#FFB8B8"/>
<path d="M457.432 596.25H479.173V613.852H443.742C443.742 611.54 444.097 609.252 444.784 607.116C445.472 604.98 446.481 603.04 447.752 601.405C449.023 599.771 450.532 598.474 452.193 597.59C453.854 596.705 455.634 596.25 457.432 596.25Z" fill="black"/>
<path d="M532.85 600.389H521.576L516.212 544.477L532.852 544.478L532.85 600.389Z" fill="#FFB8B8"/>
<path d="M513.523 596.25H535.265V613.852H499.834C499.834 611.54 500.188 609.252 500.876 607.116C501.564 604.98 502.573 603.04 503.844 601.405C505.115 599.771 506.624 598.474 508.285 597.59C509.946 596.705 511.726 596.25 513.523 596.25Z" fill="black"/>
<path d="M420.205 400.439C419.394 398.902 418.855 397.156 418.625 395.323C418.396 393.489 418.482 391.613 418.878 389.828C419.273 388.042 419.968 386.389 420.914 384.986C421.86 383.583 423.034 382.463 424.352 381.706L462.675 245.891L481.532 259.123L437.776 388.913C438.618 391.846 438.594 395.075 437.708 397.986C436.823 400.898 435.138 403.291 432.972 404.712C430.806 406.132 428.31 406.482 425.957 405.694C423.604 404.907 421.557 403.037 420.205 400.439Z" fill="#FFB0B0"/>
<path d="M527.091 425.953C525.838 425.03 524.758 423.764 523.927 422.246C523.096 420.727 522.533 418.993 522.28 417.165C522.026 415.337 522.087 413.46 522.459 411.665C522.83 409.871 523.504 408.203 524.431 406.779L512.559 263.109L534.019 264.37L538.953 405.688C540.71 407.85 541.789 410.765 541.986 413.881C542.183 416.997 541.484 420.098 540.022 422.595C538.56 425.093 536.436 426.815 534.053 427.434C531.67 428.053 529.192 427.526 527.091 425.953Z" fill="#FFB0B0"/>
<path d="M492.856 220.729C505.329 220.729 515.441 207.727 515.441 191.689C515.441 175.65 505.329 162.648 492.856 162.648C480.383 162.648 470.271 175.65 470.271 191.689C470.271 207.727 480.383 220.729 492.856 220.729Z" fill="#FFB8B8"/>
<path d="M526.947 393.282H458.858L458.94 392.601C459.062 391.583 471.075 290.398 462.215 257.295C461.326 254.042 461.404 250.481 462.434 247.297C463.465 244.114 465.374 241.533 467.796 240.051H467.796C480.46 232.383 504.768 222.941 525.286 245.856C528.305 249.283 530.663 253.567 532.172 258.368C533.682 263.169 534.302 268.356 533.984 273.519L526.947 393.282Z" fill="#FCC827"/>
<path d="M471.935 305.35L441.281 297.353L455.65 253.57C456.51 249.329 458.642 245.7 461.58 243.479C464.518 241.258 468.022 240.625 471.322 241.721C474.622 242.816 477.449 245.55 479.184 249.322C480.918 253.095 481.418 257.598 480.574 261.844L471.935 305.35Z" fill="#FCC827"/>
<path d="M511.196 320.199L509.353 265.879C507.956 255.668 512.502 246.015 519.493 244.437C526.487 242.865 533.315 249.947 534.719 260.234L541.646 310.99L511.196 320.199Z" fill="#FCC827"/>
<path d="M524.681 386.781C535.637 440.434 536.833 508.648 533.877 583.056L519.164 580.691L492.498 438.806L477.785 583.056L461.233 581.873C456.288 503.801 451.474 436.778 459.394 392.693L524.681 386.781Z" fill="#5F5D7E"/>
<path d="M507.737 214.133C503.524 219.904 495.699 216.806 495.15 208.922C495.107 208.31 495.11 207.694 495.16 207.083C495.443 203.59 497.012 200.42 496.636 196.733C496.551 195.815 496.285 194.94 495.864 194.192C492.506 188.411 484.625 196.777 481.456 191.544C479.513 188.335 481.797 183.283 480.306 179.696C478.338 174.962 472.51 177.297 468.854 174.705C464.787 171.821 465.031 163.797 467.708 158.917C470.973 152.966 476.697 149.79 482.35 149.332C488.003 148.874 493.617 150.839 498.895 153.484C504.891 156.489 510.837 160.641 514.527 167.421C519.015 175.666 519.447 186.751 517.203 196.391C515.837 202.256 511.178 209.42 507.737 214.133Z" fill="#2F2E41"/>
<path d="M659.565 614.417H100.058C99.8191 614.416 99.5902 614.267 99.4216 614.003C99.2529 613.74 99.1582 613.382 99.1582 613.009C99.1582 612.637 99.2529 612.279 99.4216 612.015C99.5902 611.751 99.8191 611.603 100.058 611.602H659.565C659.804 611.603 660.033 611.751 660.202 612.015C660.371 612.279 660.465 612.637 660.465 613.009C660.465 613.382 660.371 613.74 660.202 614.003C660.033 614.267 659.804 614.416 659.565 614.417Z" fill="#3F3D56"/>
<path d="M361.264 485.362H241.724C240.15 485.373 238.636 484.58 237.516 483.158C236.395 481.736 235.759 479.801 235.747 477.777V134.687C235.759 132.663 236.395 130.727 237.516 129.305C238.636 127.883 240.15 127.091 241.724 127.102H361.264C362.839 127.091 364.352 127.883 365.473 129.305C366.593 130.727 367.229 132.663 367.241 134.687V477.777C367.229 479.801 366.593 481.736 365.473 483.158C364.352 484.58 362.839 485.373 361.264 485.362Z" fill="white"/>
<path d="M367.241 238.117H235.747V240.482H367.241V238.117Z" fill="#CCCCCC"/>
<path d="M367.701 373.039H236.207V375.404H367.701V373.039Z" fill="#CCCCCC"/>
<path d="M278.966 127.109H277.126V486.552H278.966V127.109Z" fill="#CCCCCC"/>
<path d="M324.943 127.109H323.104V486.552H324.943V127.109Z" fill="#CCCCCC"/>
</g>
<defs>
<clipPath id="clip0_465_66">
<rect width="800" height="615" fill="white" transform="translate(-70)"/>
</clipPath>
</defs>
</svg>

        </div>
        <div className="md:w-[60%] w-[99%]"> 
        <div>

       <form method="post" onSubmit={(e) => e.preventDefault()} action="/">
        <div  className=" w-[80%] md:w-[60%] h-[60%] translate-y-[5vh] mx-auto">
        <div className=" text-center py-6">
            <h1 className="font-bold text-[red]">Sign up</h1>
          </div>
            {signupInputs1.map((input, index) => (
              <div key={index} className="mt-8 h-[6vh]">
                <input onChange={(e) => dispatch(setForm({value: e.target.value, input:input }))} type={getType(input)}  className="border rounded pl-3 w-[100%] h-[100%]"  placeholder={input}/>
              </div>
            ))}
            <div className="flex my-8 justify-between">
                <div className="flex w-[70%]">
                    <div onClick={()=>dispatch(openedCheckBox())} className={getClass()}></div>
                   <div className="h-[2vh] ml-2"><p>Remember me</p></div>
                </div>
                <div>
                    <p className="text-[red]">Forgot password ?</p>
                </div>
            </div>
            <div className="mt-8 h-[6vh]">
     <Link to="/Overview"><input type="submit" value="Login" className="bg-[red] rounded text-white h-[100%] font-bold w-[100%]" /></Link>
            </div>
            <div className="flex mt-8 mb-4 justify-between">
                <div className="w-[45%] border-b"></div>
                <div className="translate-y-3">OR</div>
                <div className="w-[45%] border-b"></div>
            </div>
            <div className="mt-6 h-[6vh]">
         <Link to="/Overview" ><input type="submit" value="Sign up" className="bg-[red] rounded text-white h-[100%] font-bold w-[100%]" /></Link>
            </div>
            <div className="flex justify-between mt-6">
              <p>Don't you have an account?</p>
              <Link to="/signup" ><p className="text-[red]">Sign up</p></Link>
            </div>
          </div>
       </form>
        </div>
        </div>
    </div>
  </div>

  )
}


export default SignUpForm